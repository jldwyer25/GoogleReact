{"ast":null,"code":"import _defineProperty from \"/Users/JLDwyer/working/GoogleReact/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/JLDwyer/working/GoogleReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JLDwyer/working/GoogleReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JLDwyer/working/GoogleReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JLDwyer/working/GoogleReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JLDwyer/working/GoogleReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JLDwyer/working/GoogleReact/client/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport { BookList, BookListItem } from \"../components/BookList\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchText: \"\",\n      searchResults: []\n    };\n\n    _this.handleInputChange = function (event) {\n      // Destructure the name and value properties off of event.target\n      // Update the appropriate state\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n      event.preventDefault();\n      API.searchBooks(_this.state.searchText).then(function (res) {\n        console.log('res', res);\n\n        _this.setState({\n          searchResults: res.data.items\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"What Books Should I Read?\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.searchText,\n        onChange: this.handleInputChange,\n        name: \"searchText\",\n        placeholder: \"ENTER BOOK IDIOT\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        onClick: this.handleFormSubmit,\n        type: \"success\",\n        className: \"input-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Search\")), React.createElement(BookList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.searchResults.map(function (item) {\n        return React.createElement(BookListItem, {\n          title: item.volumeInfo.title,\n          author: item.volumeInfo.authors.slice(', '),\n          href: item.volumeInfo.selfLink,\n          description: item.volumeInfo.description,\n          thumbnail: item.volumeInfo.imageLinks.thumbnail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/JLDwyer/working/GoogleReact/client/src/pages/Search.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","BookList","BookListItem","Search","state","searchText","searchResults","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","searchBooks","then","res","console","log","data","items","catch","err","map","item","volumeInfo","title","authors","slice","selfLink","description","imageLinks","thumbnail"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,oBAAzC;AACA,SAAQC,QAAR,EAAkBC,YAAlB,QAAqC,wBAArC;;IAEMC,M;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,aAAa,EAAE;AAFX,K;;UAKRC,iB,GAAoB,UAAAC,KAAK,EAAI;AACzB;AACA;AAFyB,0BAGDA,KAAK,CAACC,MAHL;AAAA,UAGjBC,IAHiB,iBAGjBA,IAHiB;AAAA,UAGXC,KAHW,iBAGXA,KAHW;;AAIzB,YAAKC,QAAL,qBACKF,IADL,EACYC,KADZ;AAGH,K;;UAEDE,gB,GAAmB,UAAAL,KAAK,EAAI;AACxB;AACAA,MAAAA,KAAK,CAACM,cAAN;AACAvB,MAAAA,GAAG,CAACwB,WAAJ,CAAgB,MAAKX,KAAL,CAAWC,UAA3B,EACKW,IADL,CACU,UAAAC,GAAG,EAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBF,GAAlB;;AACA,cAAKL,QAAL,CAAc;AAAEN,UAAAA,aAAa,EAAEW,GAAG,CAACG,IAAJ,CAASC;AAA1B,SAAd;AACH,OAJL,EAKKC,KALL,CAKW,UAAAC,GAAG;AAAA,eAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAAJ;AAAA,OALd;AAMH,K;;;;;;;6BAEQ;AACL,aACI,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,UADtB;AAEI,QAAA,QAAQ,EAAE,KAAKE,iBAFnB;AAGI,QAAA,IAAI,EAAC,YAHT;AAII,QAAA,WAAW,EAAC,kBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI,oBAAC,OAAD;AACI,QAAA,OAAO,EAAE,KAAKM,gBADlB;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,SAAS,EAAC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,CAJJ,EAkBI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKT,KAAL,CAAWE,aAAX,CAAyBkB,GAAzB,CAA6B,UAAAC,IAAI,EAAI;AACpC,eACE,oBAAC,YAAD;AACE,UAAA,KAAK,EAAEA,IAAI,CAACC,UAAL,CAAgBC,KADzB;AAEE,UAAA,MAAM,EAAEF,IAAI,CAACC,UAAL,CAAgBE,OAAhB,CAAwBC,KAAxB,CAA8B,IAA9B,CAFV;AAGE,UAAA,IAAI,EAAEJ,IAAI,CAACC,UAAL,CAAgBI,QAHxB;AAIE,UAAA,WAAW,EAAEL,IAAI,CAACC,UAAL,CAAgBK,WAJ/B;AAKE,UAAA,SAAS,EAAEN,IAAI,CAACC,UAAL,CAAgBM,UAAhB,CAA2BC,SALxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,OAVA,CADH,CAlBJ,CADJ;AAkCH;;;;EA7DgB7C,S;;AAgErB,eAAee,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport {BookList, BookListItem} from \"../components/BookList\";\n\nclass Search extends Component {\n    state = {\n        searchText: \"\",\n        searchResults: [],\n    }\n\n    handleInputChange = event => {\n        // Destructure the name and value properties off of event.target\n        // Update the appropriate state\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n        event.preventDefault();\n        API.searchBooks(this.state.searchText)\n            .then(res => {\n                console.log('res',res)\n                this.setState({ searchResults: res.data.items })\n            })\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        return (\n            <Container fluid>\n                <Jumbotron>\n                    <h1>What Books Should I Read?</h1>\n                </Jumbotron>\n                <form>\n                    <Input\n                        value={this.state.searchText}\n                        onChange={this.handleInputChange}\n                        name=\"searchText\"\n                        placeholder=\"ENTER BOOK IDIOT\"\n                    />\n                    <FormBtn\n                        onClick={this.handleFormSubmit}\n                        type=\"success\"\n                        className=\"input-lg\">\n                        Search\n                      </FormBtn>\n                </form>\n                <BookList>\n                  {this.state.searchResults.map(item => {\n                    return (\n                      <BookListItem\n                        title={item.volumeInfo.title}\n                        author={item.volumeInfo.authors.slice(', ')}\n                        href={item.volumeInfo.selfLink}\n                        description={item.volumeInfo.description}\n                        thumbnail={item.volumeInfo.imageLinks.thumbnail}\n                      />\n                    );\n                  })}\n                </BookList>\n            </Container>\n        );\n    }\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}