{"ast":null,"code":"import _defineProperty from \"/Users/JLDwyer/working/GoogleReact/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/JLDwyer/working/GoogleReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JLDwyer/working/GoogleReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JLDwyer/working/GoogleReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JLDwyer/working/GoogleReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JLDwyer/working/GoogleReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JLDwyer/working/GoogleReact/client/src/pages/Books.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: \"\",\n      author: \"\",\n      description: \"\",\n      image: \"\",\n      link: \"\"\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data,\n          title: \"\",\n          author: [],\n          description: \"\",\n          image: \"\",\n          link: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.title && _this.state.author) {\n        API.saveBook({\n          title: _this.state.title,\n          authors: _this.state.author,\n          description: _this.state.description\n        }).then(function (res) {\n          return _this.loadBooks();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"What Books Should I Read?\")));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["/Users/JLDwyer/working/GoogleReact/client/src/pages/Books.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Books","state","title","author","description","image","link","loadBooks","getBooks","then","res","setState","books","data","catch","err","console","log","deleteBook","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","saveBook","authors"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,oBAAzC;;IAEMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,IAAI,EAAE;AALA,K;;UAYRC,S,GAAY,YAAM;AAChBjB,MAAAA,GAAG,CAACkB,QAAJ,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eACP,MAAKC,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAEF,GAAG,CAACG,IAAb;AAAmBX,UAAAA,KAAK,EAAE,EAA1B;AAA8BC,UAAAA,MAAM,EAAE,EAAtC;AAA0CC,UAAAA,WAAW,EAAE,EAAvD;AAA2DC,UAAAA,KAAK,EAAE,EAAlE;AAAsEC,UAAAA,IAAI,EAAE;AAA5E,SAAd,CADO;AAAA,OADX,EAIGQ,KAJH,CAIS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAJZ;AAKD,K;;UAEDG,U,GAAa,UAAAC,EAAE,EAAI;AACjB7B,MAAAA,GAAG,CAAC4B,UAAJ,CAAeC,EAAf,EACGV,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAKH,SAAL,EAAJ;AAAA,OADX,EAEGO,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFZ;AAGD,K;;UAEDK,iB,GAAoB,UAAAC,KAAK,EAAI;AAAA,0BACHA,KAAK,CAACC,MADH;AAAA,UACnBC,IADmB,iBACnBA,IADmB;AAAA,UACbC,KADa,iBACbA,KADa;;AAE3B,YAAKb,QAAL,qBACGY,IADH,EACUC,KADV;AAGD,K;;UAEDC,gB,GAAmB,UAAAJ,KAAK,EAAI;AAC1BA,MAAAA,KAAK,CAACK,cAAN;;AACA,UAAI,MAAKzB,KAAL,CAAWC,KAAX,IAAoB,MAAKD,KAAL,CAAWE,MAAnC,EAA2C;AACzCb,QAAAA,GAAG,CAACqC,QAAJ,CAAa;AACXzB,UAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KADP;AAEX0B,UAAAA,OAAO,EAAE,MAAK3B,KAAL,CAAWE,MAFT;AAGXC,UAAAA,WAAW,EAAE,MAAKH,KAAL,CAAWG;AAHb,SAAb,EAKGK,IALH,CAKQ,UAAAC,GAAG;AAAA,iBAAI,MAAKH,SAAL,EAAJ;AAAA,SALX,EAMGO,KANH,CAMS,UAAAC,GAAG;AAAA,iBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,SANZ;AAOD;AACF,K;;;;;;;wCApCmB;AAClB,WAAKR,SAAL;AACD;;;6BAoCQ;AACP,aACE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,CADN,CADF;AAOD;;;;EAvDiBpB,S;;AA0DpB,eAAea,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Books extends Component {\n  state = {\n    title: \"\",\n    author: \"\",\n    description: \"\",\n    image: \"\",\n    link: \"\",\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data, title: \"\", author: [], description: \"\", image: \"\", link: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.title && this.state.author) {\n      API.saveBook({\n        title: this.state.title,\n        authors: this.state.author,\n        description: this.state.description\n      })\n        .then(res => this.loadBooks())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n            <Jumbotron>\n              <h1>What Books Should I Read?</h1>\n            </Jumbotron>\n      </Container>\n    );\n  }\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}